function Banners(){}Banners.prototype.listenImageSelectEvent=function(n){var t=n.find(".thumbnail"),e=n.find(".image-input");t.click(function(){e.click()}),e.change(function(){var n=this.files[0],e=new FormData;e.append("file",n),xfzajax.post({url:"/cms/upload_file/",data:e,processData:!1,contentType:!1,success:function(n){if(200===n.code){var e=n.data.url;t.attr("src",e)}}})})},Banners.prototype.listenCloseBtnEvent=function(e){var n=e.find(".close-btn"),t=e.attr("banner-id");n.click(function(){t?xfzalert.alertConfirm({text:"确定要删除该轮播图吗？",confirmCallback:function(){console.log("删除成功"),xfzajax.post({url:"/cms/delete_banner/",data:{banner_id:t},success:function(n){200===n.code&&xfzalert.alertSuccess("轮播图删除成功！",function(){e.remove()})}})}}):e.remove()})},Banners.prototype.listenAddBannerSaveEvent=function(a){var n=a.find(".save-btn"),r=a.find("input[name='priority']"),i=a.find("input[name='link_to']"),s=a.find(".thumbnail"),o=a.find(".priority"),c=a.attr("banner-id"),l="";l=c?"/cms/edit_banner/":"/cms/add_banners/",n.click(function(){var e=r.val(),n=i.val(),t=s.attr("src");xfzajax.post({url:l,data:{priority:e,link_to:n,image_url:t,pk:c},success:function(n){200===n.code&&(c?xfzalert.alertSuccess("轮播图修改成功！",function(){}):(c=n.data.banner_id,xfzalert.alertSuccess("轮播图添加成功！",function(){a.attr("banner-id",c)})),o.text("优先级："+e))}})})},Banners.prototype.listenAddBtnEvent=function(){var n=this,e=$("#add-banners-btn"),t=$(".banners-list-group");e.click(function(){6<=t.children().length?window.messageBox.showInfo("最多只能添加6张轮播图！"):n.createBannerItem()})},Banners.prototype.loadBannerEvent=function(){var r=this;xfzajax.get({url:"/cms/banner_list/",success:function(n){if(200===n.code)for(var e=n.data,t=0;t<e.length;t++){var a=e[t];r.createBannerItem(a)}}})},Banners.prototype.createBannerItem=function(n){var e=this,t=$(".banners-list-group"),a=template("banners-group",{banners:n}),r=null;r=n?(t.append(a),t.find(".banner-item:last")):(t.prepend(a),t.find(".banner-item:first")),e.listenImageSelectEvent(r),e.listenCloseBtnEvent(r),e.listenAddBannerSaveEvent(r)},Banners.prototype.run=function(){this.listenAddBtnEvent(),this.loadBannerEvent()},$(function(){(new Banners).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
