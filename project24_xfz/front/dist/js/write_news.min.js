function uploadFile(){}uploadFile.prototype.initUEditor=function(){window.ue=UE.getEditor("editor",{initialFrameHeight:400,serverUrl:"/ueditor/upload/"})},uploadFile.prototype.listenUploadFileEvent=function(){var t=$("#thumbnail-btn");t.change(function(){var e=t[0].files[0],o=new FormData;o.append("file",e),xfzajax.post({url:"/cms/upload_file/",data:o,processData:!1,contentType:!1,success:function(e){if(200===e.code){var o=e.data.url;$("#thumbnail-form").val(o),console.log(o)}}})})},uploadFile.prototype.listenUploadFileToQiNiuEvent=function(){var s=this;$("#thumbnail-btn").change(function(){var r=this.files[0];xfzajax.get({url:"/cms/qntoken/",success:function(e){if(200===e.code){var o=e.data.token,t=(new Date).getTime()+".",i=r.name.split("."),a=t+i[i.length-1],n={fname:a,params:{},mimeType:["image/png","image/gif","image/jpeg"]},l={useCdnDomain:!0,retryCount:6,region:qiniu.region.z2};qiniu.upload(r,a,o,n,l).subscribe({next:s.handleFileUploadProgress,error:s.handleFileUploadError,complete:s.handleFileUploadComplete})}}})})},uploadFile.prototype.handleFileUploadProgress=function(e){var o=e.total.percent.toFixed(0)+"%";uploadFile.progressGroup.show();var t=uploadFile.progressBar;t.css({width:o}),t.text(o)},uploadFile.prototype.handleFileUploadError=function(e){window.messageBox.showError(e.message),console.log(e.message),uploadFile.progressGroup.hide()},uploadFile.prototype.handleFileUploadComplete=function(e){console.log(e);var o=uploadFile.progressGroup,t=$("input[name='thumbnail']");o.hide();var i="http://ptr0aa5vs.bkt.clouddn.com"+e.key;t.val(i);var a=uploadFile.progressBar;a.css({width:"0%"}),a.text("0%")},uploadFile.prototype.listenSubmitEvent=function(){$("#submit-btn").click(function(e){var o=$(this).attr("data-news-id"),t="";t=o?"/cms/edit_news/":"/cms/write_news/",e.preventDefault();var i=$("input[name='title']").val(),a=$("select[name='category']").val(),n=$("input[name='desc']").val(),l=$("input[name='thumbnail']").val(),r=window.ue.getContent();xfzajax.post({url:t,data:{title:i,desc:n,thumbnail:l,category:a,content:r,pk:o},success:function(e){200===e.code&&(o?xfzalert.alertSuccess("恭喜！新闻编辑成功！",function(){console.log("编辑新闻id"+o)}):xfzalert.alertSuccess("恭喜！新闻发表成功！",function(){console.log("发表新闻id"+o)}))}})})},uploadFile.prototype.run=function(){var e=this;e.listenUploadFileEvent(),e.listenUploadFileToQiNiuEvent(),e.initUEditor(),e.listenSubmitEvent()},$(function(){(new uploadFile).run(),uploadFile.progressGroup=$("#progress-group"),uploadFile.progressBar=$(".progress-bar")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
