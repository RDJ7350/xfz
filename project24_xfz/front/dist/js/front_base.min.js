function FrontBase(){}function Auth(){this.maskWrapper=$(".mask-wrapper"),this.scrollWrapper=$(".scroll-wrapper"),this.smsCaptcha=$(".sms-captcha-btn")}FrontBase.prototype.run=function(){self=this,self.listenAuthBoxHover()},FrontBase.prototype.listenAuthBoxHover=function(){var t=$(".auth-box"),n=$(".user-more-box");t.hover(function(){n.show()},function(){n.hide()})},Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.listenShowHide=function(){var t=this,n=$(".signin-btn"),e=$(".signup-btn"),a=$(".close-btn");n.click(function(){t.showEvent(),t.scrollWrapper.css({left:"0px"})}),e.click(function(){t.showEvent(),t.scrollWrapper.css({left:"-400px"})}),a.click(function(){t.hideEvent()})},Auth.prototype.listenSwitchEvent=function(){var n=this;$(".switch").click(function(){var t=n.scrollWrapper.css("left");(t=parseInt(t))<0?n.scrollWrapper.animate({left:"0"}):n.scrollWrapper.animate({left:"-400px"})})},Auth.prototype.listenSigninEvent=function(){var a=this,t=$(".signin-group"),s=t.find("input[name='telephone']"),i=t.find("input[name='password']"),o=t.find("input[name='remember']");t.find(".submit-btn").click(function(){var t=s.val(),n=i.val(),e=o.prop("checked");xfzajax.post({url:"/account/login/",data:{telephone:t,password:n,remember:e?1:0},success:function(t){a.hideEvent(),window.location.reload()}})})},Auth.prototype.listenSignupEvent=function(){var f=this,m=$(".signup-group");m.find(".submit-btn").click(function(t){t.preventDefault();var n=m.find("input[name='telephone']"),e=m.find("input[name='username']"),a=m.find("input[name='img_captcha']"),s=m.find("input[name='password1']"),i=m.find("input[name='password2']"),o=m.find("input[name='sms_captcha']"),c=n.val(),p=e.val(),r=a.val(),u=s.val(),l=i.val(),h=o.val();xfzajax.post({url:"/account/register/",data:{telephone:c,username:p,img_captcha:r,password1:u,password2:l,sms_captcha:h},success:function(t){f.hideEvent(),window.location.reload()}})})},Auth.prototype.listenImageCaptcha=function(){var t=$(".img-captcha");t.click(function(){t.attr("src","/account/img_captcha/?random="+Math.random())})},Auth.prototype.listenSuccessEvent=function(){var t=this;messageBox.showSuccess("短信验证码发送成功！"),t.smsCaptcha.addClass("disabled"),t.smsCaptcha.unbind("click");var n=60,e=setInterval(function(){t.smsCaptcha.text(n+"s"),--n<=0&&(clearInterval(e),t.smsCaptcha.removeClass("disabled"),t.smsCaptcha.text("发送验证码"),t.listenSmsCaptcha())},1e3)},Auth.prototype.listenSmsCaptcha=function(){var n=this,e=$(".signup-group input[name=telephone]");n.smsCaptcha.click(function(){var t=e.val();t||messageBox.showInfo("请输入手机号码！"),xfzajax.get({url:"/account/sms_captcha/",data:{telephone:t},success:function(t){n.listenSuccessEvent()}})})},Auth.prototype.run=function(){var t=this;t.listenShowHide(),t.listenSwitchEvent(),t.listenSigninEvent(),t.listenImageCaptcha(),t.listenSmsCaptcha(),t.listenSignupEvent()},$(function(){(new Auth).run()}),$(function(){(new FrontBase).listenAuthBoxHover()}),$(function(){window.template&&(template.defaults.imports.timeSince=function(t){var n=new Date(t),e=n.getTime(),a=((new Date).getTime()-e)/1e3;return a<60?"刚刚":60<=a&&a<3600?parseInt(a/60)+"分钟前":3600<=a&&a<86400?parseInt(a/60/60)+"小时前":86400<=a&&a<2592e3?parseInt(a/60/60/24)+"天前":n.getFullYear()+"/"+n.getMonth()+"/"+n.getDay()+"/"+n.getHours()+":"+n.getMinutes()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
